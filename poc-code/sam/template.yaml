AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Failure injection for AWS Lambda

Resources:
  failureLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref failureLambdaTable
        - SSMParameterReadPolicy:
            ParameterName: !Ref failureLambdaParameter
      MemorySize: 128
      Environment:
        Variables:
          FAILURE_INJECTION_PARAM:
            Ref: failureLambdaParameter
          FAILURE_INJECTION_TABLE:
            Ref: failureLambdaTable
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId: !Ref failureLambdaApi
  failureLambdaApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods:
          - GET
        AllowHeaders: 
          - '*'
        AllowOrigins: '*'
  failureLambdaParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Value: '{"isEnabled": true, "failureMode": "latency", "rate": 1, "minLatency": 100, "maxLatency": 400, "exceptionMsg": "Exception message!", "statusCode": 404, "diskSpace": 100, "denylist": ["s3.*.amazonaws.com", "dynamodb.*.amazonaws.com"]}'
  failureLambdaTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
Outputs:
  failureLambdaApiUrl:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: 'https://${failureLambdaApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}'